# -*- coding: utf-8 -*-
"""feedforward.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P-iNf-IUgcOnO3V2uEQkQpCw29jJrS3-
"""

from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense
import matplotlib.pyplot as plt

(x_train,y_train),(x_test,y_test)=mnist.load_data()

x_train.shape

x_test.shape

plt.figure(figsize=(5,5))
for i in range(10):
  plt.subplot(10,2,i+1)
  plt.imshow(x_train[i],cmap="Greys")
  plt.axis('off')
plt.show()

plt.imshow(x_test[0],cmap='Greys')

x_train=x_train.reshape(60000,784).astype('float32')
x_test=x_test.reshape(10000,784).astype('float32')

x_train.shape

x_train/=255
x_test/=255

from keras import utils as np_utils
n_classes=10
y_train=np_utils.to_categorical(y_train,n_classes)
y_test=np_utils.to_categorical(y_test,n_classes)

model=Sequential()
model.add(Dense(64,activation='sigmoid',input_shape=(784,)))
model.add(Dense(10,activation='softmax'))

from keras.optimizers import SGD
model.compile(loss='mean_squared_error',optimizer=SGD(learning_rate=0.01),metrics=['accuracy'])

history=model.fit(x_train,y_train,epochs=100,batch_size=125,verbose=1)

plt.plot(history.history['accuracy'])

re=model.evaluate(x_test,y_test)
re