# -*- coding: utf-8 -*-
"""afeefdscientist-knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hoHORi4XxfVlmDgfBCQkBnLTwtD1TIa0
"""

import pandas as pd
import numpy as np

cols=["sepal length","sepal width","petal length","petal width","class"]
ds=pd.read_csv("iris.data",names=cols)

ds.head()

from sklearn.preprocessing import StandardScaler

sc=StandardScaler()

newds=sc.fit_transform(ds.drop("class",axis=1))

newds

df=pd.DataFrame(newds)

df.head()

y=ds["class"]

from sklearn.model_selection import train_test_split

xtr,xt,ytr,yt=train_test_split(df,y,test_size=.3,random_state=42)

xt.head()

from sklearn.neighbors import KNeighborsClassifier

knn=KNeighborsClassifier(n_neighbors=3)

values=[]
for i in range(1,40):
  knn=KNeighborsClassifier(n_neighbors=i)
  knn.fit(xtr,ytr)
  pred=knn.predict(xt)
  ac=accuracy_score(pred,yt)
  values.append(ac)

import matplotlib.pyplot as plt

plt.plot(values)

knn.fit(xtr,ytr)

pred=knn.predict(xt)

from sklearn.metrics import classification_report, accuracy_score

print(classification_report(pred,yt))

print(accuracy_score(pred,yt))

from sklearn.naive_bayes import BernoulliNB,GaussianNB

n1=BernoulliNB()

n1.fit(xtr,ytr)

pred1=n1.predict(xt)

n2=GaussianNB()
n2.fit(xtr,ytr)
pred2=n2.predict(xt)

from sklearn.metrics import accuracy_score, confusion_matrix
print("benouli",accuracy_score(pred1,yt))
print("Gaussian",accuracy_score(pred2,yt))

c1=confusion_matrix(pred1,yt)

c2=confusion_matrix(pred2,yt)

c2

